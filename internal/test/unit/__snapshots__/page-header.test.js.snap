// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Page Header renders both primary and secondary actions 1`] = `
<styled.div
  data-cosmos-key="page-header"
>
  <Heading
    size={1}
  />
  <Component
    description="A description"
    primaryAction={
      Object {
        "handler": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
        "icon": "analytics",
        "label": "Primary",
      }
    }
    secondaryAction={
      Object {
        "handler": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
        "icon": "copy",
        "label": "Secondary",
      }
    }
    title=""
  />
  <ButtonGroup
    align="left"
    compressed={false}
  >
    <Button
      appearance="secondary"
      disabled={false}
      icon="copy"
      iconAlign="left"
      loading={false}
      onClick={
        [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        }
      }
      size="large"
      success={false}
    >
      Secondary
    </Button>
    <Button
      appearance="cta"
      disabled={false}
      icon="analytics"
      iconAlign="left"
      loading={false}
      onClick={
        [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        }
      }
      size="large"
      success={false}
    >
      Primary
    </Button>
  </ButtonGroup>
</styled.div>
`;

exports[`Page Header renders primary action only 1`] = `
<styled.div
  data-cosmos-key="page-header"
>
  <Heading
    size={1}
  />
  <Component
    primaryAction={
      Object {
        "handler": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
        "icon": "copy",
        "label": "Button Content",
      }
    }
    title=""
  />
  <ButtonGroup
    align="left"
    compressed={false}
  >
    <Button
      appearance="cta"
      disabled={false}
      icon="copy"
      iconAlign="left"
      loading={false}
      onClick={
        [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        }
      }
      size="large"
      success={false}
    >
      Button Content
    </Button>
  </ButtonGroup>
</styled.div>
`;

exports[`Page Header renders secondary action only 1`] = `
<styled.div
  data-cosmos-key="page-header"
>
  <Heading
    size={1}
  />
  <Component
    description="A description"
    secondaryAction={
      Object {
        "handler": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
        "icon": "copy",
        "label": "Button Content",
      }
    }
    title=""
  />
  <ButtonGroup
    align="left"
    compressed={false}
  >
    <Button
      appearance="secondary"
      disabled={false}
      icon="copy"
      iconAlign="left"
      loading={false}
      onClick={
        [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        }
      }
      size="large"
      success={false}
    >
      Button Content
    </Button>
  </ButtonGroup>
</styled.div>
`;
